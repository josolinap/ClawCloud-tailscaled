# .github/workflows/security-scan.yml
name: Security Scan

# Run on every push to any branch and on pull‑request events.
on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

# Give the jobs only the permissions they need.
permissions:
  actions: read
  contents: read
  security-events: write   # required for uploading CodeQL results
  # (add other permissions if your workflow needs them)

jobs:
  # -----------------------------------------------------------------
  # 1️⃣ CodeQL analysis – uses the new v3 of the CodeQL Action
  # -----------------------------------------------------------------
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 30

    # CodeQL supports many languages – list the ones you need.
    # If you need more, just add them to the `languages` array.
    strategy:
      matrix:
        language: [ 'javascript', 'python', 'go', 'java' ]   # <-- adjust to your repo

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4   # latest stable version

      # Optional: set up the language runtimes if you need them for compilation
      - name: Set up JDK 21   # only needed for Java; remove if you don't use Java
        if: matrix.language == 'java'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Set up Python
        if: matrix.language == 'python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Set up Go
        if: matrix.language == 'go'
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          # If you want to use a custom CodeQL config file:
          # config-file: .github/codeql/codeql-config.yml

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          # Optional: upload SARIF to the Security tab (default is true)
          upload: true
          # Optional: specify a custom output name
          # output: ${{ matrix.language }}.sarif

  # -----------------------------------------------------------------
  # 2️⃣ Trivy scan – uses the latest published version of the Trivy Action
  # -----------------------------------------------------------------
  trivy:
    name: Trivy Vulnerability Scan
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: codeql   # optional – run after CodeQL, remove if you want parallel

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Pull Docker images / container files to scan (adjust the path to your artefacts)
      - name: Build Docker image (if you have one)
        run: |
          # Example – replace with your actual build command
          docker build -t myapp:latest .

      - name: Run Trivy scan
        # The latest tag that actually exists at the time of writing is v0.13.0
        uses: aquasecurity/trivy-action@v0.13.0
        with:
          # Scan the container image you built above
          image-ref: myapp:latest
          # Choose the scan type you need (fs, image, repo, sbom, config, etc.)
          scan-type: image
          # Output format – SARIF works nicely with GitHub's Code Scanning UI
          format: sarif
          # Where to put the SARIF file (relative to $GITHUB_WORKSPACE)
          output: trivy-results.sarif
          # Fail the job if high‑severity issues are found (optional)
          ignore-unfixed: false
          # You can also set severity thresholds, e.g.:
          # severity: HIGH,CRITICAL

      # Upload Trivy SARIF to the GitHub Security tab (optional but handy)
      - name: Upload Trivy SARIF report
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif
          # The following line makes the results appear under a custom tool name
          category: trivy
